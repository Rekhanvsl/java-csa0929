public class StringBuilderVsStringBufferDemo {
    public static void main(String[] args) {
        // Example of StringBuilder
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("This ").append("is ").append("a ").append("StringBuilder ").append("example.");
        String stringBuilderResult = stringBuilder.toString();
        System.out.println("StringBuilder Result: " + stringBuilderResult);
        
        // Example of StringBuffer
        StringBuffer stringBuffer = new StringBuffer();
        stringBuffer.append("This ").append("is ").append("a ").append("StringBuffer ").append("example.");
        String stringBufferResult = stringBuffer.toString();
        System.out.println("StringBuffer Result: " + stringBufferResult);
        
        // Compare performance of StringBuilder and StringBuffer
        int iterations = 1000000; // Number of iterations
        
        // Using StringBuilder
        long startTimeBuilder = System.nanoTime();
        StringBuilder stringBuilderPerformance = new StringBuilder();
        for (int i = 0; i < iterations; i++) {
            stringBuilderPerformance.append("String").append(i);
        }
        long endTimeBuilder = System.nanoTime();
        long durationBuilder = endTimeBuilder - startTimeBuilder;
        System.out.println("\nTime taken by StringBuilder: " + (durationBuilder / 1000000) + " milliseconds");
        
        // Using StringBuffer
        long startTimeBuffer = System.nanoTime();
        StringBuffer stringBufferPerformance = new StringBuffer();
        for (int i = 0; i < iterations; i++) {
            stringBufferPerformance.append("String").append(i);
        }
        long endTimeBuffer = System.nanoTime();
        long durationBuffer = endTimeBuffer - startTimeBuffer;
        System.out.println("Time taken by StringBuffer: " + (durationBuffer / 1000000) + " milliseconds");
    }
}
